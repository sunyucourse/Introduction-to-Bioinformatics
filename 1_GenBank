Searching the GenBank database
Exercise written by: Rasmus Wernersson 
Modified by: Yu Sun



Introduction
This exercise has two main goals: 
1) Introduction to the types of DNA data contained in the GenBank database (data format, visualization, cross-database links, how biological "features" such as genes are annotated and described as coordinates in the DNA sequence). 
2) Practice searching the online version of GenBank hosted at the NCBI. 



Starting the exercise

https://www.ncbi.nlm.nih.gov/nucleotide/


Searching for a specific ID 
In this part of the exercise we will be working with a set of alpha-globin genes. 
Query information about "AB001981" - after the search, follow the sequence link to inspect the result. 



QUESTION 1:

a) How many genes are contained in this entry?

b) From which organism does the DNA originate?

c) What kind of information is contained within the HEADER and within the FEATURE block? 

Please notice that the publication from which the DNA sequence originates is cited (and linked via a PubMED ID) within the header. Sometimes multiple publications related to the same gene is listed. This is of great importance since it makes it possible trace the source(s) of the DNA sequence and investigate if the experiments carried out is to be trusted. 


Investigate the PubMed link(s): 
*) Follow the PubMED link from the sequence entry.

*) Observe that's is always possible to read the ABSTRACT of the publication in PubMED, even if access to the publication requires subscription. For most (new) publications there will also be a direct link to the publication itself.

*) Return to the sequence entry once again (or perform a new search if you closed the window). 
View the sequence entry in FASTA format (Simply click on "Format: FASTA" in the menu) 

Now the entire GenBank entry is shown in FASTA format.



QUESTION 2:
a) What happened to the alpha-globin genes? Can they still be found?
b) Which part of the GenBank entry has been converted?
Observe that the name of the sequence is based on the name of the GenBank entry. 

Go back to GenBank format (Format: GenBank) 
Save the GenBank "raw data" on you own computer:
Do the following: 

*) "Send to" 
*) Locate the downloaded file on your own computer
*) By default it's badly named - rename the file to "AB001981.gbk".
*) Open it with any text editor. 
Notice: What we have now is the "raw" data behind the information shown online, with no fancy HTML formatting and cross-links. The reason for renaming the file is simply a pratice of good file management - now we can by just skimming the filenames guess that it's a GenBank file ("*.gbk") and that it contains the "AB001981" entry.

-> Verify that the contents of the file is as expected (it should look exactly like the information shown online).


Now it's time to start exploring the genes that are defined in this GenBank entry 
Click the first "CDS" element (Alpha-D) 
CDS = CoDing Sequences : The PROTEIN CODING part of a CDS. Basically: the sequence you get when the CODING exons are concatenated (UTR regions are ignored). A CDS always start with a START codon and ends with a STOP codon. 
Observe the following:

*) What happened to the DNA sequence?
*) Which three nucleotide does the sequence now start and end with? Does this make sense?
*) Are there any introns present? 

Repeat the same procedure for the other CDS (Alpha-A). 

When looking at the FEATURE table, if first line of text in the definition of each CDS is as follows: 
join(1104..1192,1306..1510,1614..1742)
join(4915..5009,5165..5369,5474..5602)

QUESTION 3: Based on you observations: What does these numbers mean? How many coding Exons does each gene contain? 
View the first CDS (Alpha-D) in FASTA format

QUESTION 4: What does the numbers in the sequence title represent? 

Switch to Graphic view (Format: Graphic) 
An interactive graphical representation of the GenBank entry will now to shown. The upper part of the visualization show the entire length of the entry (5.891 bp) with bars representing the individual exons within the two gene. 
*) This zoomed view below can be changed by dragging the blue box in the overview representation.
*) The zoom level can be changed.
*) By "mousing over" the bars additional information about that particular feature will be shown. 
The graphical overview is mostly useful for inspecting GenBank entries with multiple entires (some entries have hundreds of embedded genes). Play around with the interface for a few minutes to see what functionality is offered. 





Searching the GenBank

The key issue to keep in mind when searching GenBank is to avoid drowning in huge amounts of irrelevant data. It is therefore of great importance to filter out unwanted information, WITHOUT losing the relevant entries. 
Today we will work with searching the TEXTUAL annotation of GenBank entries (keywords, free text etc). We will later get back to sequence based searches (BLAST). 
In the first part of the exercise the aim is to locate the human gene for Insulin 
Search for GenBank entries containing the term "insulin"
Simply enter "insulin" in the search box and hit "GO".
Observe the following: 

*) A large number of entries are found.
*) Go through a few pages of results and notice that we are offered data from a diverse set of sources: Experimental work, Patent applications, predicted genes, partial genes etc. 

QUESTION 5: How many search result where returned? 

Confining the search to specific parts of the annotation: 
By default the search term is matched against ALL POSSIBLE fields in the GenBank entries - including almost all text in the HEADER and FEATURE table. It's even possible to pick up entries where the match is to one of the authors names and not a gene name! (Perhaps not an issue for insulin). Luckily it is possible to restrict the search to specific pre-indexed fields in the HEADER and FEATURE table ("Search fields"), which makes it possible to make the search much more focused. 

Narrow the search to human insulin: 
*) Query: "human[organism] insulin"

*) Observe that we now only get entries from Human - Homo sapiens (TaxID: 9606)
*) For all major model organisms the english name (rat, mouse, pig) can be used instead of the full binominal latin name (Rattus norvegicus, Mus musculus, Sus scrofa).
*) How many hits do we have now?
*) Do they appear to be insulin genes?
*) Try inspecting a few of the obvious non-insulin genes, and see if you can find out WHERE the term "insulin" was used. 

QUESTION 6:How many search result were returned? 
The main issue here is that we find entries where "insulin" is mentioned anywhere in the entry, and sometimes it's unrelated genes like "Insulin-receptor", "Insulin inhibitor" etc. 

*) Query: "human[organism] insulin[keyword]"

*) Observe that we have now reduced the number of sequences to a level, where it's actually practically possible to inspect them all (even if there's still a fair bit of junk).

*) Find the most likely candidate for the full-length insulin gene by browsing the list of search hits and inspecting promising entries. 

QUESTION 7:How many search results where found? Which entry is the correct Human Insulin gene?


Combining search terms using boolean operators: NOT, AND and OR 
Our next task will be to find full length insulin genes from as many different organisms as possible. 

Let's start out with a new clean search for Insulin 
*) Query: "insulin[keyword]"

The number of hits is not that high (< 100, december 2008) and in principle they could all be inspected by hand. However, another possibility is to add search terms to AVOID in order to bring down the false positive rate. 
By a brief inspection of some of the search hits, it turns out some of them are Insulin-like rather than being a actual insulin gene. We can exclude these by using the NOT keyword: 

Let's get rid of the partial genes: 
*) Query: "Insulin[keyword] NOT (part OR partial) 
Notice the use of parenthesis 
Conceptually what we are doing heres is to conduct a number of searches that are either COMBINED or SUBTRACTED from each other. The (part OR partial) search term finds all entries where any of the three terms are found. This list is then excluded from the Insulin[keyword] by using the NOT operator. 

The final part of the exercise to continue to find terms to include and exclude on you own hand. The point is to bring down the number of search result to a level where it's easy to pick the correct ones. 
QUESTION 8: 
*) Which search term did you end up using? 
*) How many search results do you get now? 

Notice: There are several possible answers to this question, as it will be a balance between filterning out False Positives (things that are NOT insulin) without filterning out (too many) True Positives (things that are actully insulin). 

QUESTION 9: 
Find the alpha-globin gene from Capra hircus

Find the actin gene from as many organisms as possible. 





